/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package stockjournal;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.time.LocalDate;
import java.time.LocalTime;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author bradl
 */
public class EditEntriesPage extends javax.swing.JFrame {

    private String stockname;
    private Stock stock;
    private AutoStock autostock;
    private String date;
    private String time;
    private boolean edited = false;
    private String defaultmessage;
    private JournalPage jp;

    /**
     * Creates new form NewJournalEntryPage
     */
    public EditEntriesPage() {
        initComponents();
    }

    public EditEntriesPage(String stockname, JournalPage jp) {
        this();
        this.stockname = stockname;
        this.jp = jp;
        String currentDirectory = System.getProperty("user.dir");
        currentDirectory.replace("'\'", "\\");
        File stockFile = new File(currentDirectory + "\\" + stockname + ".txt");
        try {
            ObjectInputStream is = new ObjectInputStream(new FileInputStream(stockFile.getPath()));
            stock = (Stock) is.readObject();
            is.close();
            populateEntryTable();
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        } catch (ClassNotFoundException e) {
            e.printStackTrace();
        }

        dateField.setText("Date: " + LocalDate.now().toString());
        journalArea.setLineWrap(true);
        journalArea.setWrapStyleWord(true);
        defaultmessage = journalArea.getText();
    }

    private void populateEntryTable() {
        if (!stock.getJournal().isEmpty()) {
            ArrayList<String> dates = stock.getJournal().iterateDates();
            ArrayList<String> time = stock.getJournal().iterateTime();
            DefaultTableModel model = (DefaultTableModel) entryTable.getModel();
            Object rowData[] = new Object[2];
            for (int i = 0; i < time.size(); i++) {
                rowData[0] = dates.get(i);
                rowData[1] = time.get(i);
                model.addRow(rowData);
                rowData = new Object[2];
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        journalArea = new javax.swing.JTextArea();
        saveButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        dateField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        entryTable = new javax.swing.JTable();
        removeButton = new javax.swing.JButton();
        stockNameLabel = new javax.swing.JLabel();
        stockNameLabel1 = new javax.swing.JLabel();
        editButton = new javax.swing.JButton();
        newLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        journalArea.setColumns(20);
        journalArea.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        journalArea.setRows(5);
        journalArea.setText("Please enter new entry here.\n");
        journalArea.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jScrollPane3.setViewportView(journalArea);

        saveButton.setBackground(new java.awt.Color(100, 100, 100));
        saveButton.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        saveButton.setForeground(new java.awt.Color(255, 255, 255));
        saveButton.setText("Save");
        saveButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                saveButtonMouseClicked(evt);
            }
        });
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        cancelButton.setBackground(new java.awt.Color(100, 100, 100));
        cancelButton.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        cancelButton.setForeground(new java.awt.Color(255, 255, 255));
        cancelButton.setText("Cancel");
        cancelButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cancelButtonMouseClicked(evt);
            }
        });
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        dateField.setEditable(false);
        dateField.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        dateField.setText("Date");
        dateField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        entryTable.setBackground(new java.awt.Color(250, 250, 250));
        entryTable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        entryTable.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        entryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Time"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        entryTable.setToolTipText("");
        entryTable.setRowHeight(24);
        jScrollPane1.setViewportView(entryTable);

        removeButton.setBackground(new java.awt.Color(100, 100, 100));
        removeButton.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        removeButton.setForeground(new java.awt.Color(255, 255, 255));
        removeButton.setText("Remove");
        removeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                removeButtonMouseClicked(evt);
            }
        });
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });

        stockNameLabel.setFont(new java.awt.Font("Segoe UI Semibold", 0, 36)); // NOI18N
        stockNameLabel.setText("New Journal Entry");

        stockNameLabel1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 22)); // NOI18N
        stockNameLabel1.setText("Existing Entries");

        editButton.setBackground(new java.awt.Color(100, 100, 100));
        editButton.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        editButton.setForeground(new java.awt.Color(255, 255, 255));
        editButton.setText("Edit");
        editButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                editButtonMouseClicked(evt);
            }
        });
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        newLabel.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        newLabel.setText("Since this stock entry has just been created, type anything below and hit \"save\" to initialize your journal.");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(dateField)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 901, Short.MAX_VALUE))
                        .addGap(97, 97, 97))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(stockNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(newLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(stockNameLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(editButton, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(removeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(5, 5, 5))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(65, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(stockNameLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stockNameLabel1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(dateField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8)
                        .addComponent(newLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 492, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(removeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(editButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(77, 77, 77)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(69, 69, 69))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveButtonMouseClicked
        String body = journalArea.getText();
        LocalDate date = LocalDate.now();
        LocalTime time = LocalTime.now();
        if (!body.equals(defaultmessage)) {
            if (edited == true) {
                stock.getJournal().edit(this.date, this.time, body);
                jp.populateEntries(stock);
            } else {
                stock.getJournal().add(date, time, body);
                jp.addEntry(date.toString(), body);
            }
        }

        String currentDirectory = System.getProperty("user.dir");
        currentDirectory.replace("'\'", "\\");
        File stockFile = new File(currentDirectory + "\\" + stockname + ".txt");
        String temp = "temp.txt";
        File newFile = new File(currentDirectory + "\\" + temp);

        try {
            ObjectOutputStream os = new ObjectOutputStream(new FileOutputStream(newFile.getPath()));
            if (stock.isAuto()) {
                autostock = (AutoStock) stock;
                os.writeObject(autostock);
            } else {
                os.writeObject(stock);
            }
            os.close();
            stockFile.delete();
            File dump = new File(currentDirectory + "\\" + stockname + ".txt");
            newFile.renameTo(dump); //sequence to write data into new file and replace the old one
        } catch (IOException e) {
            e.printStackTrace();
        }

        SaveDialog dialog = new SaveDialog(this, true);
        dialog.setLocation(700, 400);
        dialog.setVisible(true);
        setVisible(false);
        dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_saveButtonMouseClicked

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_saveButtonActionPerformed

    private void cancelButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelButtonMouseClicked
        setVisible(false);
        dispose();
    }//GEN-LAST:event_cancelButtonMouseClicked

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void removeButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeButtonMouseClicked
        int row = entryTable.getSelectedRow();
        if (row == -1) {
            HighlightDialog dialog = new HighlightDialog(this, true);
            dialog.setLocation(700, 400);
            dialog.setVisible(true);
        } else {

            DefaultTableModel model = (DefaultTableModel) entryTable.getModel();
            date = model.getValueAt(entryTable.getSelectedRow(), 0).toString();
            time = model.getValueAt(entryTable.getSelectedRow(), 1).toString();
            Journal journal = stock.getJournal();
            journal.remove(date, time);
            model.removeRow(entryTable.getSelectedRow());

            String currentDirectory = System.getProperty("user.dir");
            currentDirectory.replace("'\'", "\\");
            File stockFile = new File(currentDirectory + "\\" + stockname + ".txt");
            String temp = "temp.txt";
            File newFile = new File(currentDirectory + "\\" + temp);
            try {
                ObjectOutputStream os = new ObjectOutputStream(new FileOutputStream(newFile.getPath()));
                if (stock.isAuto()) {
                    autostock = (AutoStock) stock;
                    autostock.setJournal(journal);
                    os.writeObject(autostock);
                } else {
                    stock.setJournal(journal);
                    os.writeObject(stock);
                }
                os.close();
                stockFile.delete();
                File dump = new File(currentDirectory + "\\" + stockname + ".txt");
                newFile.renameTo(dump); //sequence to write data into new file and replace the old one
            } catch (IOException e) {
                e.printStackTrace();
            }

            setVisible(false);
            new EditEntriesPage(stockname, jp).setVisible(true);
            dispose();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_removeButtonMouseClicked

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_removeButtonActionPerformed

    private void editButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editButtonMouseClicked
        edited = true;
        DefaultTableModel model = (DefaultTableModel) entryTable.getModel();
        if (entryTable.getSelectedRow() == -1) {
            HighlightDialog dialog = new HighlightDialog(this, true);
            dialog.setLocation(700, 400);
            dialog.setVisible(true);
        } else {
            date = model.getValueAt(entryTable.getSelectedRow(), 0).toString();
            time = model.getValueAt(entryTable.getSelectedRow(), 1).toString();
            journalArea.setText(stock.getJournal().getBody(date, time));
            dateField.setText(stock.getJournal().getDate(date, time));
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_editButtonMouseClicked

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_editButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditEntriesPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditEntriesPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditEntriesPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditEntriesPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditEntriesPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JTextField dateField;
    private javax.swing.JButton editButton;
    private javax.swing.JTable entryTable;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea journalArea;
    private javax.swing.JLabel newLabel;
    private javax.swing.JButton removeButton;
    private javax.swing.JButton saveButton;
    private javax.swing.JLabel stockNameLabel;
    private javax.swing.JLabel stockNameLabel1;
    // End of variables declaration//GEN-END:variables
}
